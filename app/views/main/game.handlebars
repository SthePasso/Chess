<div class="row ml-1 mt-4">
  <div class="col">
    <div id="board" style="width: 500px"></div>
    <div id="status">A vez é do jogador <b>branco</b>.</div>
  </div>
</div>
<script src="/js/jquery.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script type="text/javascript" src="/js/chess.min.js"></script>
<script type="text/javascript" src="/js/chessboard-1.0.0.min.js"></script>
<script>
  const socket = io();
  const game = new Chess();
  const color = '{{color}}';
  const fen = 'start';
  const partida = {{partida}};

  game.load(fen); // fen é a posição das peças no tabuleiro

  const board = Chessboard('board', {
    draggable: true,
    orientation: (color == 'w') ? 'white' : 'black',

    position: fen,
    moveSpeed: 'slow',
    pieceTheme: '/img/chesspieces/wikipedia/{piece}.png',
    onDragStart: onDragStart, // quando o usuário pega a peça, para começar seu movimento
    onDrop: onDrop, // quando o usuário solta a peça, para encerrar seu movimento
    onSnapEnd: onSnapEnd // quando um jogador come a peça do outro, ou quando o peao chega no topo do campo do outro
  });

  function onDragStart(source, piece, position, orientation) {

    // nao permitir o movimento de peças em caso de game over
    if (game.game_over()) return false;

    // permitir apenas o movimento de peças de sua própria cor
    if ((color === 'w' && piece.search(/^b/) !== -1) ||
      (color === 'b' && piece.search(/^w/) !== -1)) {
      return false
    }

    // o jogador só pode mover peças caso seja sua vez de jogar
    if ((game.turn() === 'w' && piece.search(/^b/) !== -1) ||
      (game.turn() === 'b' && piece.search(/^w/) !== -1)) {
      return false
    }
  }

  function onDrop(source, target) {

    // verificar se o movimento feito é legal de acordo com as regras de xadrez
    var move = game.move({//qual o movimento do usuario
      from: source,
      to: target,
      promotion: 'q' // NOTA: Para manter a simplicidade, peões só poderão ser promovidos para rainhas
    });

    // movimento ilegal, vamos retroceder a peça para a posição original
    if (move === null) return 'snapback'

    // **** Usar SOCKET.IO para enviar o movimento para o adversário **** // 
    socket.emit('move',{
      from: source,
      to: target,
      promotion: 'q'
    });
    updateStatus();
  }

  function onSnapEnd() {
    board.position(game.fen())
  }

  function updateStatus() {
    var status = ''

    var moveColor = '<b>branco</b>'
    if (game.turn() === 'b') {
      moveColor = '<b>preto</b>'
    }

    // checkmate?
    if (game.in_checkmate()) {
      status = 'É xeque-mate! Vitória do jogador ' + moveColor + '!'
    }

    // empate? (draw)
    else if (game.in_draw()) {
      status = 'O jogo empatou!'
    }

    // o jogo continua
    else {
      status = 'A vez é do jogador ' + moveColor + '.'

      // check?
      if (game.in_check()) {
        status += ', o jogador ' + moveColor + ' está em xeque.'
      }
    }

    document.getElementById('status').innerHTML = status;
  }
  socket.on('move',(move)=> {
    board.move(move.from +'-' + move.to)
    game.move({
      from: move.from,
      to: move.to,
      promotion: 'q'
    })
    updateStatus();
  });

</script>

<div class="col-12">
  <label for="textMessage">Digite sua mensagem</label>
  <textarea id="textMessage" placeholder="escreva sua mensagem aqui..."></textarea>
  <button class="btn btn-primary"  onclick="sendMessage()">Enviar mensagem</button>
</div>

<div class="row mt-3 ml-0">
    <div class="col">
        <button id="botao" class="btn btn-primary">Enviar um oi</button>
        <input type="radio" name="sala" value="1" onclick="mudarSala(this);" checked> Sala 1
        <input type="radio" name="sala" value="2" onclick="mudarSala(this);"> Sala 2        
        <div id="msgs"></div>
    </div>
</div>

<script>
    const botao = document.getElementById('botao');
    const msgs = document.getElementById('msgs');
    botao.onclick = () => {
        socket.emit('oi','Oi!');
    };
    socket.on('connect', () => {
        document.title = socket.id.substr(0,4);
    });
    socket.on('oi', (oi) => {
        msgs.innerHTML += oi + '<br>';
    });
    function mudarSala (radio) {
        socket.emit('mudarSala', radio.value);
    }
</script>

<script>
  function sendMessage() {
    var message = document.getElementById('textMessage').value;
    socket.emit(message);
  }
</script>





